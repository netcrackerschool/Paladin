<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframewrk.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:property-placeholder location="classpath:persistence-mysql.properties" />

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:db/sql/create-db.sql" />
    </jdbc:initialize-database>

    <tx:annotation-driven />

    <bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:file:#{systemProperties['user.home']}/paladin/data" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" >
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="publicKeyEntryRepository" class="com.netcracker.paladin.infrastructure.repositories.PublicKeyEntryRepositoryImpl">
        <constructor-arg name="namedParameterJdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="configRepository" class="com.netcracker.paladin.infrastructure.repositories.ConfigRepositoryImpl">
        <constructor-arg name="namedParameterJdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="asymmetricEncryption" class="com.netcracker.paladin.infrastructure.services.encryption.asymmetric.Rsa">
    </bean>

    <bean id="symmetricEncryption" class="com.netcracker.paladin.infrastructure.services.encryption.symmetric.Aes">
    </bean>

    <bean id="sessionKeygen" class="com.netcracker.paladin.infrastructure.services.encryption.sessionkeygen.ChebiKeygen">
    </bean>

    <bean id="configService" class="com.netcracker.paladin.infrastructure.services.config.ConfigService">
        <constructor-arg name="configRepository" ref="configRepository"/>
    </bean>

    <bean id="emailService" class="com.netcracker.paladin.infrastructure.services.email.EmailServiceImpl">
        <constructor-arg name="configService" ref="configService"/>
    </bean>

    <bean id="encryptionService" class="com.netcracker.paladin.infrastructure.services.encryption.EncryptionServiceImpl">
        <constructor-arg name="publicKeyEntryRepository" ref="publicKeyEntryRepository"/>
        <constructor-arg name="asymmetricEncryption" ref="asymmetricEncryption"/>
        <constructor-arg name="symmetricEncryption" ref="symmetricEncryption"/>
        <constructor-arg name="sessionKeygen" ref="sessionKeygen"/>
    </bean>

    <bean id="swingPaladinEmail" class="com.netcracker.paladin.swing.SwingPaladinEmail">
        <constructor-arg name="configService" ref="configService"/>
        <constructor-arg name="emailService" ref="emailService"/>
        <constructor-arg name="encryptionService" ref="encryptionService"/>
    </bean>
</beans>